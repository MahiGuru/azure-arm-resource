/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureBotService } from "@azure/arm-botservice";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource
 *
 * @summary Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/DirectlineRegenerateKeys.json
 */
function regenerateKeysForDirectLineChannelSite() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "DirectLineChannel";
        const parameters = { key: "key1", siteName: "testSiteName" };
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.directLine.regenerateKeys(resourceGroupName, resourceName, channelName, parameters);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource
 *
 * @summary Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService resource
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/WebChatRegenerateKeys.json
 */
function regenerateKeysForWebChatChannelSite() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "WebChatChannel";
        const parameters = { key: "key1", siteName: "testSiteName" };
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.directLine.regenerateKeys(resourceGroupName, resourceName, channelName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        regenerateKeysForDirectLineChannelSite();
        regenerateKeysForWebChatChannelSite();
    });
}
main().catch(console.error);
//# sourceMappingURL=directLineRegenerateKeysSample.js.map
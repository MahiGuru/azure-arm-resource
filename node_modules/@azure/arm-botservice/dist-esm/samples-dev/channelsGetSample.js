/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureBotService } from "@azure/arm-botservice";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Returns a BotService Channel registration specified by the parameters.
 *
 * @summary Returns a BotService Channel registration specified by the parameters.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/GetAlexaChannel.json
 */
function getAlexaChannel() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "AlexaChannel";
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.channels.get(resourceGroupName, resourceName, channelName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns a BotService Channel registration specified by the parameters.
 *
 * @summary Returns a BotService Channel registration specified by the parameters.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/GetChannel.json
 */
function getChannel() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "EmailChannel";
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.channels.get(resourceGroupName, resourceName, channelName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns a BotService Channel registration specified by the parameters.
 *
 * @summary Returns a BotService Channel registration specified by the parameters.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/GetDirectLineSpeechChannel.json
 */
function getDirectLineSpeechChannel() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "DirectLineSpeechChannel";
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.channels.get(resourceGroupName, resourceName, channelName);
        console.log(result);
    });
}
/**
 * This sample demonstrates how to Returns a BotService Channel registration specified by the parameters.
 *
 * @summary Returns a BotService Channel registration specified by the parameters.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/GetLineChannel.json
 */
function getLineChannel() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const channelName = "LineChannel";
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.channels.get(resourceGroupName, resourceName, channelName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        getAlexaChannel();
        getChannel();
        getDirectLineSpeechChannel();
        getLineChannel();
    });
}
main().catch(console.error);
//# sourceMappingURL=channelsGetSample.js.map
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureBotService } from "@azure/arm-botservice";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Creates a Bot Service. Bot Service is a resource group wide resource type.
 *
 * @summary Creates a Bot Service. Bot Service is a resource group wide resource type.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/CreateBot.json
 */
function createBot() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "subscription-id";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "OneResourceGroupName";
        const resourceName = "samplebotname";
        const parameters = {
            etag: "etag1",
            kind: "sdk",
            location: "West US",
            properties: {
                description: "The description of the bot",
                cmekKeyVaultUrl: "https://myCmekKey",
                developerAppInsightKey: "appinsightskey",
                developerAppInsightsApiKey: "appinsightsapikey",
                developerAppInsightsApplicationId: "appinsightsappid",
                disableLocalAuth: true,
                displayName: "The Name of the bot",
                endpoint: "http://mybot.coffee",
                iconUrl: "http://myicon",
                isCmekEnabled: true,
                luisAppIds: ["luisappid1", "luisappid2"],
                luisKey: "luiskey",
                msaAppId: "exampleappid",
                msaAppMSIResourceId: "/subscriptions/foo/resourcegroups/bar/providers/microsoft.managedidentity/userassignedidentities/sampleId",
                msaAppTenantId: "exampleapptenantid",
                msaAppType: "UserAssignedMSI",
                publicNetworkAccess: "Enabled",
                schemaTransformationVersion: "1.0"
            },
            sku: { name: "S1" },
            tags: { tag1: "value1", tag2: "value2" }
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.bots.create(resourceGroupName, resourceName, parameters);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        createBot();
    });
}
main().catch(console.error);
//# sourceMappingURL=botsCreateSample.js.map
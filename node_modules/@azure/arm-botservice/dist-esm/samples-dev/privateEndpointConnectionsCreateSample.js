/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureBotService } from "@azure/arm-botservice";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Update the state of specified private endpoint connection associated with the Bot.
 *
 * @summary Update the state of specified private endpoint connection associated with the Bot.
 * x-ms-original-file: specification/botservice/resource-manager/Microsoft.BotService/stable/2022-09-15/examples/PutPrivateEndpointConnection.json
 */
function putPrivateEndpointConnection() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["BOTSERVICE_SUBSCRIPTION_ID"] || "{subscription-id}";
        const resourceGroupName = process.env["BOTSERVICE_RESOURCE_GROUP"] || "res7687";
        const resourceName = "sto9699";
        const privateEndpointConnectionName = "{privateEndpointConnectionName}";
        const properties = {
            privateLinkServiceConnectionState: {
                description: "Auto-Approved",
                status: "Approved"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new AzureBotService(credential, subscriptionId);
        const result = yield client.privateEndpointConnections.create(resourceGroupName, resourceName, privateEndpointConnectionName, properties);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        putPrivateEndpointConnection();
    });
}
main().catch(console.error);
//# sourceMappingURL=privateEndpointConnectionsCreateSample.js.map
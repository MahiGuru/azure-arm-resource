import * as coreClient from "@azure/core-client";
import * as coreAuth from "@azure/core-auth";
import { Bots, Channels, DirectLine, Email, Operations, BotConnection, QnAMakerEndpointKeys, HostSettings, OperationResults, PrivateEndpointConnections, PrivateLinkResources } from "./operationsInterfaces";
import { AzureBotServiceOptionalParams } from "./models";
export declare class AzureBotService extends coreClient.ServiceClient {
    $host: string;
    apiVersion: string;
    subscriptionId: string;
    /**
     * Initializes a new instance of the AzureBotService class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId Azure Subscription ID.
     * @param options The parameter options
     */
    constructor(credentials: coreAuth.TokenCredential, subscriptionId: string, options?: AzureBotServiceOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    bots: Bots;
    channels: Channels;
    directLine: DirectLine;
    email: Email;
    operations: Operations;
    botConnection: BotConnection;
    qnAMakerEndpointKeys: QnAMakerEndpointKeys;
    hostSettings: HostSettings;
    operationResults: OperationResults;
    privateEndpointConnections: PrivateEndpointConnections;
    privateLinkResources: PrivateLinkResources;
}
//# sourceMappingURL=azureBotService.d.ts.map
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("tslib"),coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline"),coreLro=require("@azure/core-lro");function _interopNamespace(a){var i;return a&&a.__esModule?a:(i=Object.create(null),a&&Object.keys(a).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(a,e),Object.defineProperty(i,e,r.get?r:{enumerable:!0,get:function(){return a[e]}}))}),i.default=a,Object.freeze(i))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);const pageMap=new WeakMap;function getContinuationToken(e){return"object"!=typeof e||null===e||null==(e=pageMap.get(e))?void 0:e.continuationToken}function setContinuationToken(e,r){var a;"object"==typeof e&&null!==e&&r&&((a=null!=(a=pageMap.get(e))?a:{}).continuationToken=r,pageMap.set(e,a))}exports.KnownMsaAppType=void 0,function(e){e.UserAssignedMSI="UserAssignedMSI",e.SingleTenant="SingleTenant",e.MultiTenant="MultiTenant"}(exports.KnownMsaAppType||(exports.KnownMsaAppType={})),exports.KnownPublicNetworkAccess=void 0,function(e){e.Enabled="Enabled",e.Disabled="Disabled"}(exports.KnownPublicNetworkAccess||(exports.KnownPublicNetworkAccess={})),exports.KnownPrivateEndpointServiceConnectionStatus=void 0,function(e){e.Pending="Pending",e.Approved="Approved",e.Rejected="Rejected"}(exports.KnownPrivateEndpointServiceConnectionStatus||(exports.KnownPrivateEndpointServiceConnectionStatus={})),exports.KnownPrivateEndpointConnectionProvisioningState=void 0,function(e){e.Succeeded="Succeeded",e.Creating="Creating",e.Deleting="Deleting",e.Failed="Failed"}(exports.KnownPrivateEndpointConnectionProvisioningState||(exports.KnownPrivateEndpointConnectionProvisioningState={})),exports.KnownSkuName=void 0,function(e){e.F0="F0",e.S1="S1"}(exports.KnownSkuName||(exports.KnownSkuName={})),exports.KnownSkuTier=void 0,function(e){e.Free="Free",e.Standard="Standard"}(exports.KnownSkuTier||(exports.KnownSkuTier={})),exports.KnownKind=void 0,function(e){e.Sdk="sdk",e.Designer="designer",e.Bot="bot",e.Function="function",e.Azurebot="azurebot"}(exports.KnownKind||(exports.KnownKind={})),exports.KnownOperationResultStatus=void 0,function(e){e.Canceled="Canceled",e.Succeeded="Succeeded",e.Failed="Failed",e.Requested="Requested",e.Running="Running"}(exports.KnownOperationResultStatus||(exports.KnownOperationResultStatus={}));const BotProperties={type:{name:"Composite",className:"BotProperties",modelProperties:{displayName:{serializedName:"displayName",required:!0,type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},iconUrl:{defaultValue:"",serializedName:"iconUrl",type:{name:"String"}},endpoint:{serializedName:"endpoint",required:!0,nullable:!0,type:{name:"String"}},endpointVersion:{serializedName:"endpointVersion",readOnly:!0,type:{name:"String"}},allSettings:{serializedName:"allSettings",type:{name:"Dictionary",value:{type:{name:"String"}}}},parameters:{serializedName:"parameters",type:{name:"Dictionary",value:{type:{name:"String"}}}},manifestUrl:{serializedName:"manifestUrl",type:{name:"String"}},msaAppType:{serializedName:"msaAppType",type:{name:"String"}},msaAppId:{serializedName:"msaAppId",required:!0,type:{name:"String"}},msaAppTenantId:{serializedName:"msaAppTenantId",type:{name:"String"}},msaAppMSIResourceId:{serializedName:"msaAppMSIResourceId",type:{name:"String"}},configuredChannels:{serializedName:"configuredChannels",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},enabledChannels:{serializedName:"enabledChannels",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},developerAppInsightKey:{serializedName:"developerAppInsightKey",type:{name:"String"}},developerAppInsightsApiKey:{serializedName:"developerAppInsightsApiKey",type:{name:"String"}},developerAppInsightsApplicationId:{serializedName:"developerAppInsightsApplicationId",type:{name:"String"}},luisAppIds:{serializedName:"luisAppIds",type:{name:"Sequence",element:{type:{name:"String"}}}},luisKey:{serializedName:"luisKey",type:{name:"String"}},isCmekEnabled:{defaultValue:!1,serializedName:"isCmekEnabled",type:{name:"Boolean"}},cmekKeyVaultUrl:{serializedName:"cmekKeyVaultUrl",type:{name:"String"}},cmekEncryptionStatus:{serializedName:"cmekEncryptionStatus",readOnly:!0,type:{name:"String"}},tenantId:{serializedName:"tenantId",type:{name:"String"}},publicNetworkAccess:{defaultValue:"Enabled",serializedName:"publicNetworkAccess",type:{name:"String"}},isStreamingSupported:{defaultValue:!1,serializedName:"isStreamingSupported",type:{name:"Boolean"}},isDeveloperAppInsightsApiKeySet:{serializedName:"isDeveloperAppInsightsApiKeySet",readOnly:!0,type:{name:"Boolean"}},migrationToken:{serializedName:"migrationToken",readOnly:!0,type:{name:"String"}},disableLocalAuth:{serializedName:"disableLocalAuth",type:{name:"Boolean"}},schemaTransformationVersion:{serializedName:"schemaTransformationVersion",nullable:!0,type:{name:"String"}},storageResourceId:{serializedName:"storageResourceId",type:{name:"String"}},privateEndpointConnections:{serializedName:"privateEndpointConnections",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateEndpointConnection"}}}},openWithHint:{serializedName:"openWithHint",type:{name:"String"}},appPasswordHint:{serializedName:"appPasswordHint",type:{name:"String"}},provisioningState:{serializedName:"provisioningState",readOnly:!0,type:{name:"String"}},publishingCredentials:{serializedName:"publishingCredentials",type:{name:"String"}}}}},PrivateEndpoint={type:{name:"Composite",className:"PrivateEndpoint",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}}}}},PrivateLinkServiceConnectionState={type:{name:"Composite",className:"PrivateLinkServiceConnectionState",modelProperties:{status:{serializedName:"status",type:{name:"String"}},description:{serializedName:"description",type:{name:"String"}},actionsRequired:{serializedName:"actionsRequired",type:{name:"String"}}}}},PrivateLinkResourceBase={type:{name:"Composite",className:"PrivateLinkResourceBase",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}}}}},Resource={type:{name:"Composite",className:"Resource",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}},tags:{serializedName:"tags",type:{name:"Dictionary",value:{type:{name:"String"}}}},sku:{serializedName:"sku",type:{name:"Composite",className:"Sku"}},kind:{serializedName:"kind",nullable:!0,type:{name:"String"}},etag:{serializedName:"etag",type:{name:"String"}},zones:{serializedName:"zones",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}}}}},Sku={type:{name:"Composite",className:"Sku",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}},tier:{serializedName:"tier",readOnly:!0,type:{name:"String"}}}}},ErrorModel={type:{name:"Composite",className:"ErrorModel",modelProperties:{error:{serializedName:"error",type:{name:"Composite",className:"ErrorBody"}}}}},ErrorBody={type:{name:"Composite",className:"ErrorBody",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},message:{serializedName:"message",required:!0,type:{name:"String"}}}}},BotResponseList={type:{name:"Composite",className:"BotResponseList",modelProperties:{nextLink:{serializedName:"nextLink",type:{name:"String"}},value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"Bot"}}}}}}},Channel={type:{name:"Composite",className:"Channel",uberParent:"Channel",polymorphicDiscriminator:{serializedName:"channelName",clientName:"channelName"},modelProperties:{channelName:{serializedName:"channelName",required:!0,type:{name:"String"}},etag:{serializedName:"etag",nullable:!0,type:{name:"String"}},provisioningState:{serializedName:"provisioningState",readOnly:!0,type:{name:"String"}},location:{defaultValue:"global",serializedName:"location",type:{name:"String"}}}}},ChannelSettings={type:{name:"Composite",className:"ChannelSettings",modelProperties:{extensionKey1:{defaultValue:"",serializedName:"extensionKey1",type:{name:"String"}},extensionKey2:{defaultValue:"",serializedName:"extensionKey2",type:{name:"String"}},sites:{serializedName:"sites",type:{name:"Sequence",element:{type:{name:"Composite",className:"Site"}}}},channelId:{serializedName:"channelId",type:{name:"String"}},channelDisplayName:{serializedName:"channelDisplayName",type:{name:"String"}},botId:{serializedName:"botId",type:{name:"String"}},botIconUrl:{serializedName:"botIconUrl",type:{name:"String"}},isEnabled:{serializedName:"isEnabled",type:{name:"Boolean"}},disableLocalAuth:{serializedName:"disableLocalAuth",type:{name:"Boolean"}},requireTermsAgreement:{serializedName:"requireTermsAgreement",type:{name:"Boolean"}}}}},Site={type:{name:"Composite",className:"Site",modelProperties:{tenantId:{serializedName:"tenantId",type:{name:"String"}},siteId:{serializedName:"siteId",readOnly:!0,type:{name:"String"}},siteName:{serializedName:"siteName",required:!0,type:{name:"String"}},key:{serializedName:"key",readOnly:!0,type:{name:"String"}},key2:{serializedName:"key2",readOnly:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}},isTokenEnabled:{serializedName:"isTokenEnabled",readOnly:!0,type:{name:"Boolean"}},isEndpointParametersEnabled:{serializedName:"isEndpointParametersEnabled",type:{name:"Boolean"}},isDetailedLoggingEnabled:{serializedName:"isDetailedLoggingEnabled",type:{name:"Boolean"}},isBlockUserUploadEnabled:{serializedName:"isBlockUserUploadEnabled",nullable:!0,type:{name:"Boolean"}},isNoStorageEnabled:{serializedName:"isNoStorageEnabled",type:{name:"Boolean"}},eTag:{serializedName:"eTag",type:{name:"String"}},appId:{serializedName:"appId",type:{name:"String"}},isV1Enabled:{serializedName:"isV1Enabled",type:{name:"Boolean"}},isV3Enabled:{serializedName:"isV3Enabled",type:{name:"Boolean"}},isSecureSiteEnabled:{serializedName:"isSecureSiteEnabled",type:{name:"Boolean"}},trustedOrigins:{serializedName:"trustedOrigins",type:{name:"Sequence",element:{type:{name:"String"}}}},isWebChatSpeechEnabled:{defaultValue:!1,serializedName:"isWebChatSpeechEnabled",type:{name:"Boolean"}},isWebchatPreviewEnabled:{defaultValue:!1,serializedName:"isWebchatPreviewEnabled",type:{name:"Boolean"}}}}},ChannelResponseList={type:{name:"Composite",className:"ChannelResponseList",modelProperties:{nextLink:{serializedName:"nextLink",type:{name:"String"}},value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"BotChannel"}}}}}}},SiteInfo={type:{name:"Composite",className:"SiteInfo",modelProperties:{siteName:{serializedName:"siteName",required:!0,type:{name:"String"}},key:{serializedName:"key",required:!0,type:{name:"Enum",allowedValues:["key1","key2"]}}}}},CreateEmailSignInUrlResponse={type:{name:"Composite",className:"CreateEmailSignInUrlResponse",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},location:{serializedName:"location",type:{name:"String"}},properties:{serializedName:"properties",type:{name:"Composite",className:"CreateEmailSignInUrlResponseProperties"}}}}},CreateEmailSignInUrlResponseProperties={type:{name:"Composite",className:"CreateEmailSignInUrlResponseProperties",modelProperties:{url:{serializedName:"url",type:{name:"String"}}}}},CheckNameAvailabilityRequestBody={type:{name:"Composite",className:"CheckNameAvailabilityRequestBody",modelProperties:{name:{serializedName:"name",type:{name:"String"}},type:{serializedName:"type",type:{name:"String"}}}}},CheckNameAvailabilityResponseBody={type:{name:"Composite",className:"CheckNameAvailabilityResponseBody",modelProperties:{valid:{serializedName:"valid",type:{name:"Boolean"}},message:{serializedName:"message",type:{name:"String"}},absCode:{serializedName:"absCode",type:{name:"String"}}}}},OperationEntityListResult={type:{name:"Composite",className:"OperationEntityListResult",modelProperties:{nextLink:{serializedName:"nextLink",type:{name:"String"}},value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"OperationEntity"}}}}}}},OperationEntity={type:{name:"Composite",className:"OperationEntity",modelProperties:{name:{serializedName:"name",type:{name:"String"}},display:{serializedName:"display",type:{name:"Composite",className:"OperationDisplayInfo"}},origin:{serializedName:"origin",type:{name:"String"}},properties:{serializedName:"properties",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},OperationDisplayInfo={type:{name:"Composite",className:"OperationDisplayInfo",modelProperties:{description:{serializedName:"description",type:{name:"String"}},operation:{serializedName:"operation",type:{name:"String"}},provider:{serializedName:"provider",type:{name:"String"}},resource:{serializedName:"resource",type:{name:"String"}}}}},ServiceProviderResponseList={type:{name:"Composite",className:"ServiceProviderResponseList",modelProperties:{nextLink:{serializedName:"nextLink",type:{name:"String"}},value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceProvider"}}}}}}},ServiceProvider={type:{name:"Composite",className:"ServiceProvider",modelProperties:{properties:{serializedName:"properties",type:{name:"Composite",className:"ServiceProviderProperties"}}}}},ServiceProviderProperties={type:{name:"Composite",className:"ServiceProviderProperties",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},displayName:{serializedName:"displayName",readOnly:!0,type:{name:"String"}},serviceProviderName:{serializedName:"serviceProviderName",readOnly:!0,type:{name:"String"}},devPortalUrl:{serializedName:"devPortalUrl",readOnly:!0,type:{name:"String"}},iconUrl:{defaultValue:"",serializedName:"iconUrl",type:{name:"String"}},parameters:{serializedName:"parameters",type:{name:"Sequence",element:{type:{name:"Composite",className:"ServiceProviderParameter"}}}}}}},ServiceProviderParameter={type:{name:"Composite",className:"ServiceProviderParameter",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}},type:{serializedName:"type",readOnly:!0,type:{name:"String"}},displayName:{serializedName:"displayName",readOnly:!0,type:{name:"String"}},description:{serializedName:"description",readOnly:!0,type:{name:"String"}},helpUrl:{serializedName:"helpUrl",readOnly:!0,type:{name:"String"}},default:{serializedName:"default",readOnly:!0,type:{name:"String"}},metadata:{serializedName:"metadata",type:{name:"Composite",className:"ServiceProviderParameterMetadata"}}}}},ServiceProviderParameterMetadata={type:{name:"Composite",className:"ServiceProviderParameterMetadata",modelProperties:{constraints:{serializedName:"constraints",type:{name:"Composite",className:"ServiceProviderParameterMetadataConstraints"}}}}},ServiceProviderParameterMetadataConstraints={type:{name:"Composite",className:"ServiceProviderParameterMetadataConstraints",modelProperties:{required:{serializedName:"required",type:{name:"Boolean"}}}}},QnAMakerEndpointKeysRequestBody={type:{name:"Composite",className:"QnAMakerEndpointKeysRequestBody",modelProperties:{hostname:{serializedName:"hostname",type:{name:"String"}},authkey:{serializedName:"authkey",type:{name:"String"}}}}},QnAMakerEndpointKeysResponse={type:{name:"Composite",className:"QnAMakerEndpointKeysResponse",modelProperties:{primaryEndpointKey:{serializedName:"primaryEndpointKey",type:{name:"String"}},secondaryEndpointKey:{serializedName:"secondaryEndpointKey",type:{name:"String"}},installedVersion:{serializedName:"installedVersion",type:{name:"String"}},lastStableVersion:{serializedName:"lastStableVersion",type:{name:"String"}}}}},ConnectionSettingProperties={type:{name:"Composite",className:"ConnectionSettingProperties",modelProperties:{clientId:{serializedName:"clientId",type:{name:"String"}},settingId:{serializedName:"settingId",readOnly:!0,type:{name:"String"}},clientSecret:{serializedName:"clientSecret",type:{name:"String"}},scopes:{defaultValue:"",serializedName:"scopes",type:{name:"String"}},serviceProviderId:{serializedName:"serviceProviderId",type:{name:"String"}},serviceProviderDisplayName:{serializedName:"serviceProviderDisplayName",type:{name:"String"}},parameters:{serializedName:"parameters",type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectionSettingParameter"}}}},provisioningState:{serializedName:"provisioningState",type:{name:"String"}}}}},ConnectionSettingParameter={type:{name:"Composite",className:"ConnectionSettingParameter",modelProperties:{key:{serializedName:"key",type:{name:"String"}},value:{serializedName:"value",nullable:!0,type:{name:"String"}}}}},ConnectionSettingResponseList={type:{name:"Composite",className:"ConnectionSettingResponseList",modelProperties:{nextLink:{serializedName:"nextLink",type:{name:"String"}},value:{serializedName:"value",readOnly:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"ConnectionSetting"}}}}}}},HostSettingsResponse={type:{name:"Composite",className:"HostSettingsResponse",modelProperties:{oAuthUrl:{serializedName:"OAuthUrl",type:{name:"String"}},toBotFromChannelOpenIdMetadataUrl:{serializedName:"ToBotFromChannelOpenIdMetadataUrl",type:{name:"String"}},toBotFromChannelTokenIssuer:{serializedName:"ToBotFromChannelTokenIssuer",type:{name:"String"}},toBotFromEmulatorOpenIdMetadataUrl:{serializedName:"ToBotFromEmulatorOpenIdMetadataUrl",type:{name:"String"}},toChannelFromBotLoginUrl:{serializedName:"ToChannelFromBotLoginUrl",type:{name:"String"}},toChannelFromBotOAuthScope:{serializedName:"ToChannelFromBotOAuthScope",type:{name:"String"}},validateAuthority:{serializedName:"ValidateAuthority",type:{name:"Boolean"}},botOpenIdMetadata:{serializedName:"BotOpenIdMetadata",type:{name:"String"}}}}},OperationResultsDescription={type:{name:"Composite",className:"OperationResultsDescription",modelProperties:{id:{serializedName:"id",readOnly:!0,type:{name:"String"}},name:{serializedName:"name",readOnly:!0,type:{name:"String"}},status:{serializedName:"status",readOnly:!0,type:{name:"String"}},startTime:{serializedName:"startTime",readOnly:!0,type:{name:"DateTime"}}}}},PrivateEndpointConnectionListResult={type:{name:"Composite",className:"PrivateEndpointConnectionListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateEndpointConnection"}}}}}}},PrivateLinkResourceListResult={type:{name:"Composite",className:"PrivateLinkResourceListResult",modelProperties:{value:{serializedName:"value",type:{name:"Sequence",element:{type:{name:"Composite",className:"PrivateLinkResource"}}}}}}},AlexaChannelProperties={type:{name:"Composite",className:"AlexaChannelProperties",modelProperties:{alexaSkillId:{serializedName:"alexaSkillId",required:!0,type:{name:"String"}},urlFragment:{serializedName:"urlFragment",readOnly:!0,type:{name:"String"}},serviceEndpointUri:{serializedName:"serviceEndpointUri",readOnly:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},FacebookChannelProperties={type:{name:"Composite",className:"FacebookChannelProperties",modelProperties:{verifyToken:{serializedName:"verifyToken",readOnly:!0,type:{name:"String"}},pages:{serializedName:"pages",type:{name:"Sequence",element:{type:{name:"Composite",className:"FacebookPage"}}}},appId:{serializedName:"appId",required:!0,type:{name:"String"}},appSecret:{serializedName:"appSecret",type:{name:"String"}},callbackUrl:{serializedName:"callbackUrl",readOnly:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},FacebookPage={type:{name:"Composite",className:"FacebookPage",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},accessToken:{serializedName:"accessToken",type:{name:"String"}}}}},EmailChannelProperties={type:{name:"Composite",className:"EmailChannelProperties",modelProperties:{emailAddress:{serializedName:"emailAddress",required:!0,type:{name:"String"}},authMethod:{serializedName:"authMethod",type:{name:"Enum",allowedValues:[0,1]}},password:{serializedName:"password",type:{name:"String"}},magicCode:{serializedName:"magicCode",type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},MsTeamsChannelProperties={type:{name:"Composite",className:"MsTeamsChannelProperties",modelProperties:{enableCalling:{defaultValue:!1,serializedName:"enableCalling",type:{name:"Boolean"}},callingWebhook:{serializedName:"callingWebhook",type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}},incomingCallRoute:{serializedName:"incomingCallRoute",type:{name:"String"}},deploymentEnvironment:{defaultValue:"FallbackDeploymentEnvironment",serializedName:"deploymentEnvironment",type:{name:"String"}},acceptedTerms:{serializedName:"acceptedTerms",nullable:!0,type:{name:"Boolean"}}}}},SkypeChannelProperties={type:{name:"Composite",className:"SkypeChannelProperties",modelProperties:{enableMessaging:{serializedName:"enableMessaging",type:{name:"Boolean"}},enableMediaCards:{serializedName:"enableMediaCards",type:{name:"Boolean"}},enableVideo:{serializedName:"enableVideo",type:{name:"Boolean"}},enableCalling:{defaultValue:!1,serializedName:"enableCalling",type:{name:"Boolean"}},enableScreenSharing:{serializedName:"enableScreenSharing",type:{name:"Boolean"}},enableGroups:{serializedName:"enableGroups",type:{name:"Boolean"}},groupsMode:{serializedName:"groupsMode",type:{name:"String"}},callingWebHook:{serializedName:"callingWebHook",type:{name:"String"}},incomingCallRoute:{serializedName:"incomingCallRoute",type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},KikChannelProperties={type:{name:"Composite",className:"KikChannelProperties",modelProperties:{userName:{serializedName:"userName",required:!0,type:{name:"String"}},apiKey:{serializedName:"apiKey",type:{name:"String"}},isValidated:{serializedName:"isValidated",type:{name:"Boolean"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},WebChatChannelProperties={type:{name:"Composite",className:"WebChatChannelProperties",modelProperties:{webChatEmbedCode:{serializedName:"webChatEmbedCode",readOnly:!0,type:{name:"String"}},sites:{serializedName:"sites",type:{name:"Sequence",element:{type:{name:"Composite",className:"WebChatSite"}}}}}}},DirectLineChannelProperties={type:{name:"Composite",className:"DirectLineChannelProperties",modelProperties:{sites:{serializedName:"sites",type:{name:"Sequence",element:{type:{name:"Composite",className:"DirectLineSite"}}}},extensionKey1:{defaultValue:"",serializedName:"extensionKey1",type:{name:"String"}},extensionKey2:{defaultValue:"",serializedName:"extensionKey2",type:{name:"String"}},directLineEmbedCode:{serializedName:"DirectLineEmbedCode",type:{name:"String"}}}}},TelegramChannelProperties={type:{name:"Composite",className:"TelegramChannelProperties",modelProperties:{accessToken:{serializedName:"accessToken",type:{name:"String"}},isValidated:{serializedName:"isValidated",type:{name:"Boolean"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},SmsChannelProperties={type:{name:"Composite",className:"SmsChannelProperties",modelProperties:{phone:{serializedName:"phone",required:!0,type:{name:"String"}},accountSID:{serializedName:"accountSID",required:!0,type:{name:"String"}},authToken:{serializedName:"authToken",type:{name:"String"}},isValidated:{serializedName:"isValidated",type:{name:"Boolean"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},SlackChannelProperties={type:{name:"Composite",className:"SlackChannelProperties",modelProperties:{clientId:{serializedName:"clientId",type:{name:"String"}},clientSecret:{serializedName:"clientSecret",type:{name:"String"}},verificationToken:{serializedName:"verificationToken",type:{name:"String"}},scopes:{serializedName:"scopes",type:{name:"String"}},landingPageUrl:{serializedName:"landingPageUrl",type:{name:"String"}},redirectAction:{serializedName:"redirectAction",readOnly:!0,type:{name:"String"}},lastSubmissionId:{serializedName:"lastSubmissionId",readOnly:!0,type:{name:"String"}},registerBeforeOAuthFlow:{serializedName:"registerBeforeOAuthFlow",type:{name:"Boolean"}},isValidated:{serializedName:"IsValidated",readOnly:!0,type:{name:"Boolean"}},signingSecret:{serializedName:"signingSecret",type:{name:"String"}},isEnabled:{serializedName:"isEnabled",required:!0,type:{name:"Boolean"}}}}},LineChannelProperties={type:{name:"Composite",className:"LineChannelProperties",modelProperties:{lineRegistrations:{serializedName:"lineRegistrations",required:!0,type:{name:"Sequence",element:{type:{name:"Composite",className:"LineRegistration"}}}},callbackUrl:{serializedName:"callbackUrl",readOnly:!0,type:{name:"String"}},isValidated:{serializedName:"isValidated",readOnly:!0,type:{name:"Boolean"}}}}},LineRegistration={type:{name:"Composite",className:"LineRegistration",modelProperties:{generatedId:{serializedName:"generatedId",readOnly:!0,type:{name:"String"}},channelSecret:{serializedName:"channelSecret",type:{name:"String"}},channelAccessToken:{serializedName:"channelAccessToken",type:{name:"String"}}}}},DirectLineSpeechChannelProperties={type:{name:"Composite",className:"DirectLineSpeechChannelProperties",modelProperties:{cognitiveServiceResourceId:{serializedName:"cognitiveServiceResourceId",type:{name:"String"}},cognitiveServiceRegion:{serializedName:"cognitiveServiceRegion",nullable:!0,type:{name:"String"}},cognitiveServiceSubscriptionKey:{serializedName:"cognitiveServiceSubscriptionKey",nullable:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",type:{name:"Boolean"}},customVoiceDeploymentId:{serializedName:"customVoiceDeploymentId",type:{name:"String"}},customSpeechModelId:{serializedName:"customSpeechModelId",type:{name:"String"}},isDefaultBotForCogSvcAccount:{serializedName:"isDefaultBotForCogSvcAccount",type:{name:"Boolean"}}}}},TelephonyChannelProperties={type:{name:"Composite",className:"TelephonyChannelProperties",modelProperties:{phoneNumbers:{serializedName:"phoneNumbers",type:{name:"Sequence",element:{type:{name:"Composite",className:"TelephonyPhoneNumbers"}}}},apiConfigurations:{serializedName:"apiConfigurations",type:{name:"Sequence",element:{type:{name:"Composite",className:"TelephonyChannelResourceApiConfiguration"}}}},cognitiveServiceSubscriptionKey:{serializedName:"cognitiveServiceSubscriptionKey",nullable:!0,type:{name:"String"}},cognitiveServiceRegion:{serializedName:"cognitiveServiceRegion",nullable:!0,type:{name:"String"}},defaultLocale:{serializedName:"defaultLocale",nullable:!0,type:{name:"String"}},premiumSKU:{serializedName:"premiumSKU",nullable:!0,type:{name:"String"}},isEnabled:{serializedName:"isEnabled",type:{name:"Boolean"}}}}},TelephonyPhoneNumbers={type:{name:"Composite",className:"TelephonyPhoneNumbers",modelProperties:{id:{serializedName:"id",type:{name:"String"}},phoneNumber:{serializedName:"phoneNumber",type:{name:"String"}},acsEndpoint:{serializedName:"acsEndpoint",nullable:!0,type:{name:"String"}},acsSecret:{serializedName:"acsSecret",nullable:!0,type:{name:"String"}},acsResourceId:{serializedName:"acsResourceId",nullable:!0,type:{name:"String"}},cognitiveServiceSubscriptionKey:{serializedName:"cognitiveServiceSubscriptionKey",nullable:!0,type:{name:"String"}},cognitiveServiceRegion:{serializedName:"cognitiveServiceRegion",nullable:!0,type:{name:"String"}},cognitiveServiceResourceId:{serializedName:"cognitiveServiceResourceId",nullable:!0,type:{name:"String"}},defaultLocale:{serializedName:"defaultLocale",nullable:!0,type:{name:"String"}},offerType:{serializedName:"offerType",nullable:!0,type:{name:"String"}}}}},TelephonyChannelResourceApiConfiguration={type:{name:"Composite",className:"TelephonyChannelResourceApiConfiguration",modelProperties:{id:{serializedName:"id",type:{name:"String"}},providerName:{serializedName:"providerName",nullable:!0,type:{name:"String"}},cognitiveServiceSubscriptionKey:{serializedName:"cognitiveServiceSubscriptionKey",nullable:!0,type:{name:"String"}},cognitiveServiceRegion:{serializedName:"cognitiveServiceRegion",nullable:!0,type:{name:"String"}},cognitiveServiceResourceId:{serializedName:"cognitiveServiceResourceId",nullable:!0,type:{name:"String"}},defaultLocale:{serializedName:"defaultLocale",nullable:!0,type:{name:"String"}}}}},ConnectionItemName={type:{name:"Composite",className:"ConnectionItemName",modelProperties:{name:{serializedName:"name",readOnly:!0,type:{name:"String"}}}}},PrivateEndpointConnection={type:{name:"Composite",className:"PrivateEndpointConnection",modelProperties:Object.assign(Object.assign({},PrivateLinkResourceBase.type.modelProperties),{privateEndpoint:{serializedName:"properties.privateEndpoint",type:{name:"Composite",className:"PrivateEndpoint"}},privateLinkServiceConnectionState:{serializedName:"properties.privateLinkServiceConnectionState",type:{name:"Composite",className:"PrivateLinkServiceConnectionState"}},provisioningState:{serializedName:"properties.provisioningState",readOnly:!0,type:{name:"String"}},groupIds:{serializedName:"properties.groupIds",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},PrivateLinkResource={type:{name:"Composite",className:"PrivateLinkResource",modelProperties:Object.assign(Object.assign({},PrivateLinkResourceBase.type.modelProperties),{groupId:{serializedName:"properties.groupId",readOnly:!0,type:{name:"String"}},requiredMembers:{serializedName:"properties.requiredMembers",readOnly:!0,type:{name:"Sequence",element:{type:{name:"String"}}}},requiredZoneNames:{serializedName:"properties.requiredZoneNames",type:{name:"Sequence",element:{type:{name:"String"}}}}})}},Bot={type:{name:"Composite",className:"Bot",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"BotProperties"}}})}},BotChannel={type:{name:"Composite",className:"BotChannel",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"Channel"}}})}},ConnectionSetting={type:{name:"Composite",className:"ConnectionSetting",modelProperties:Object.assign(Object.assign({},Resource.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"ConnectionSettingProperties"}}})}},AlexaChannel={serializedName:"AlexaChannel",type:{name:"Composite",className:"AlexaChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"AlexaChannelProperties"}}})}},FacebookChannel={serializedName:"FacebookChannel",type:{name:"Composite",className:"FacebookChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"FacebookChannelProperties"}}})}},EmailChannel={serializedName:"EmailChannel",type:{name:"Composite",className:"EmailChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"EmailChannelProperties"}}})}},OutlookChannel={serializedName:"OutlookChannel",type:{name:"Composite",className:"OutlookChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign({},Channel.type.modelProperties)}},MsTeamsChannel={serializedName:"MsTeamsChannel",type:{name:"Composite",className:"MsTeamsChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"MsTeamsChannelProperties"}}})}},SkypeChannel={serializedName:"SkypeChannel",type:{name:"Composite",className:"SkypeChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"SkypeChannelProperties"}}})}},KikChannel={serializedName:"KikChannel",type:{name:"Composite",className:"KikChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"KikChannelProperties"}}})}},WebChatChannel={serializedName:"WebChatChannel",type:{name:"Composite",className:"WebChatChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"WebChatChannelProperties"}}})}},DirectLineChannel={serializedName:"DirectLineChannel",type:{name:"Composite",className:"DirectLineChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"DirectLineChannelProperties"}}})}},TelegramChannel={serializedName:"TelegramChannel",type:{name:"Composite",className:"TelegramChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"TelegramChannelProperties"}}})}},SmsChannel={serializedName:"SmsChannel",type:{name:"Composite",className:"SmsChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"SmsChannelProperties"}}})}},SlackChannel={serializedName:"SlackChannel",type:{name:"Composite",className:"SlackChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"SlackChannelProperties"}}})}},LineChannel={serializedName:"LineChannel",type:{name:"Composite",className:"LineChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"LineChannelProperties"}}})}},DirectLineSpeechChannel={serializedName:"DirectLineSpeechChannel",type:{name:"Composite",className:"DirectLineSpeechChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"DirectLineSpeechChannelProperties"}}})}},Omnichannel={serializedName:"Omnichannel",type:{name:"Composite",className:"Omnichannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign({},Channel.type.modelProperties)}},TelephonyChannel={serializedName:"TelephonyChannel",type:{name:"Composite",className:"TelephonyChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign(Object.assign({},Channel.type.modelProperties),{properties:{serializedName:"properties",type:{name:"Composite",className:"TelephonyChannelProperties"}}})}},AcsChatChannel={serializedName:"AcsChatChannel",type:{name:"Composite",className:"AcsChatChannel",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign({},Channel.type.modelProperties)}},SearchAssistant={serializedName:"SearchAssistant",type:{name:"Composite",className:"SearchAssistant",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign({},Channel.type.modelProperties)}},M365Extensions={serializedName:"M365Extensions",type:{name:"Composite",className:"M365Extensions",uberParent:"Channel",polymorphicDiscriminator:Channel.type.polymorphicDiscriminator,modelProperties:Object.assign({},Channel.type.modelProperties)}},WebChatSite={type:{name:"Composite",className:"WebChatSite",modelProperties:Object.assign({},Site.type.modelProperties)}},DirectLineSite={type:{name:"Composite",className:"DirectLineSite",modelProperties:Object.assign({},Site.type.modelProperties)}},ListChannelWithKeysResponse={type:{name:"Composite",className:"ListChannelWithKeysResponse",modelProperties:Object.assign(Object.assign({},BotChannel.type.modelProperties),{resource:{serializedName:"resource",type:{name:"Composite",className:"Channel"}},setting:{serializedName:"setting",type:{name:"Composite",className:"ChannelSettings"}},provisioningState:{serializedName:"provisioningState",type:{name:"String"}},entityTag:{serializedName:"entityTag",type:{name:"String"}},changedTime:{serializedName:"changedTime",type:{name:"String"}}})}};let discriminators={Channel:Channel,"Channel.AlexaChannel":AlexaChannel,"Channel.FacebookChannel":FacebookChannel,"Channel.EmailChannel":EmailChannel,"Channel.OutlookChannel":OutlookChannel,"Channel.MsTeamsChannel":MsTeamsChannel,"Channel.SkypeChannel":SkypeChannel,"Channel.KikChannel":KikChannel,"Channel.WebChatChannel":WebChatChannel,"Channel.DirectLineChannel":DirectLineChannel,"Channel.TelegramChannel":TelegramChannel,"Channel.SmsChannel":SmsChannel,"Channel.SlackChannel":SlackChannel,"Channel.LineChannel":LineChannel,"Channel.DirectLineSpeechChannel":DirectLineSpeechChannel,"Channel.Omnichannel":Omnichannel,"Channel.TelephonyChannel":TelephonyChannel,"Channel.AcsChatChannel":AcsChatChannel,"Channel.SearchAssistant":SearchAssistant,"Channel.M365Extensions":M365Extensions};var Mappers=Object.freeze({__proto__:null,BotProperties:BotProperties,PrivateEndpoint:PrivateEndpoint,PrivateLinkServiceConnectionState:PrivateLinkServiceConnectionState,PrivateLinkResourceBase:PrivateLinkResourceBase,Resource:Resource,Sku:Sku,ErrorModel:ErrorModel,ErrorBody:ErrorBody,BotResponseList:BotResponseList,Channel:Channel,ChannelSettings:ChannelSettings,Site:Site,ChannelResponseList:ChannelResponseList,SiteInfo:SiteInfo,CreateEmailSignInUrlResponse:CreateEmailSignInUrlResponse,CreateEmailSignInUrlResponseProperties:CreateEmailSignInUrlResponseProperties,CheckNameAvailabilityRequestBody:CheckNameAvailabilityRequestBody,CheckNameAvailabilityResponseBody:CheckNameAvailabilityResponseBody,OperationEntityListResult:OperationEntityListResult,OperationEntity:OperationEntity,OperationDisplayInfo:OperationDisplayInfo,ServiceProviderResponseList:ServiceProviderResponseList,ServiceProvider:ServiceProvider,ServiceProviderProperties:ServiceProviderProperties,ServiceProviderParameter:ServiceProviderParameter,ServiceProviderParameterMetadata:ServiceProviderParameterMetadata,ServiceProviderParameterMetadataConstraints:ServiceProviderParameterMetadataConstraints,QnAMakerEndpointKeysRequestBody:QnAMakerEndpointKeysRequestBody,QnAMakerEndpointKeysResponse:QnAMakerEndpointKeysResponse,ConnectionSettingProperties:ConnectionSettingProperties,ConnectionSettingParameter:ConnectionSettingParameter,ConnectionSettingResponseList:ConnectionSettingResponseList,HostSettingsResponse:HostSettingsResponse,OperationResultsDescription:OperationResultsDescription,PrivateEndpointConnectionListResult:PrivateEndpointConnectionListResult,PrivateLinkResourceListResult:PrivateLinkResourceListResult,AlexaChannelProperties:AlexaChannelProperties,FacebookChannelProperties:FacebookChannelProperties,FacebookPage:FacebookPage,EmailChannelProperties:EmailChannelProperties,MsTeamsChannelProperties:MsTeamsChannelProperties,SkypeChannelProperties:SkypeChannelProperties,KikChannelProperties:KikChannelProperties,WebChatChannelProperties:WebChatChannelProperties,DirectLineChannelProperties:DirectLineChannelProperties,TelegramChannelProperties:TelegramChannelProperties,SmsChannelProperties:SmsChannelProperties,SlackChannelProperties:SlackChannelProperties,LineChannelProperties:LineChannelProperties,LineRegistration:LineRegistration,DirectLineSpeechChannelProperties:DirectLineSpeechChannelProperties,TelephonyChannelProperties:TelephonyChannelProperties,TelephonyPhoneNumbers:TelephonyPhoneNumbers,TelephonyChannelResourceApiConfiguration:TelephonyChannelResourceApiConfiguration,ConnectionItemName:ConnectionItemName,PrivateEndpointConnection:PrivateEndpointConnection,PrivateLinkResource:PrivateLinkResource,Bot:Bot,BotChannel:BotChannel,ConnectionSetting:ConnectionSetting,AlexaChannel:AlexaChannel,FacebookChannel:FacebookChannel,EmailChannel:EmailChannel,OutlookChannel:OutlookChannel,MsTeamsChannel:MsTeamsChannel,SkypeChannel:SkypeChannel,KikChannel:KikChannel,WebChatChannel:WebChatChannel,DirectLineChannel:DirectLineChannel,TelegramChannel:TelegramChannel,SmsChannel:SmsChannel,SlackChannel:SlackChannel,LineChannel:LineChannel,DirectLineSpeechChannel:DirectLineSpeechChannel,Omnichannel:Omnichannel,TelephonyChannel:TelephonyChannel,AcsChatChannel:AcsChatChannel,SearchAssistant:SearchAssistant,M365Extensions:M365Extensions,WebChatSite:WebChatSite,DirectLineSite:DirectLineSite,ListChannelWithKeysResponse:ListChannelWithKeysResponse,discriminators:discriminators});const contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},parameters={parameterPath:"parameters",mapper:Bot},accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},resourceGroupName={parameterPath:"resourceGroupName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"resourceGroupName",required:!0,type:{name:"String"}}},resourceName={parameterPath:"resourceName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"resourceName",required:!0,type:{name:"String"}}},apiVersion={parameterPath:"apiVersion",mapper:{defaultValue:"2022-09-15",isConstant:!0,serializedName:"api-version",type:{name:"String"}}},subscriptionId={parameterPath:"subscriptionId",mapper:{serializedName:"subscriptionId",required:!0,type:{name:"String"}}},parameters2={parameterPath:"parameters",mapper:CheckNameAvailabilityRequestBody},nextLink={parameterPath:"nextLink",mapper:{serializedName:"nextLink",required:!0,type:{name:"String"}},skipEncoding:!0},parameters3={parameterPath:"parameters",mapper:BotChannel},channelName={parameterPath:"channelName",mapper:{serializedName:"channelName",required:!0,type:{name:"Enum",allowedValues:["AlexaChannel","FacebookChannel","EmailChannel","KikChannel","TelegramChannel","SlackChannel","MsTeamsChannel","SkypeChannel","WebChatChannel","DirectLineChannel","SmsChannel","LineChannel","DirectLineSpeechChannel","OutlookChannel","Omnichannel","TelephonyChannel","AcsChatChannel","SearchAssistant","M365Extensions"]}}},channelName1={parameterPath:"channelName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"channelName",required:!0,type:{name:"String"}}},parameters5={parameterPath:"parameters",mapper:SiteInfo},channelName2={parameterPath:"channelName",mapper:{serializedName:"channelName",required:!0,type:{name:"Enum",allowedValues:["WebChatChannel","DirectLineChannel"]}}},connectionName={parameterPath:"connectionName",mapper:{constraints:{Pattern:new RegExp("^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$"),MaxLength:64,MinLength:2},serializedName:"connectionName",required:!0,type:{name:"String"}}},parameters6={parameterPath:"parameters",mapper:ConnectionSetting},parameters7={parameterPath:"parameters",mapper:QnAMakerEndpointKeysRequestBody},operationResultId={parameterPath:"operationResultId",mapper:{serializedName:"operationResultId",required:!0,type:{name:"String"}}},privateEndpointConnectionName={parameterPath:"privateEndpointConnectionName",mapper:{serializedName:"privateEndpointConnectionName",required:!0,type:{name:"String"}}},properties2={parameterPath:"properties",mapper:PrivateEndpointConnection};class BotsImpl{constructor(e){this.client=e}listByResourceGroup(r,a){const e=this.listByResourceGroupPagingAll(r,a);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,a,e)}}}listByResourceGroupPagingPage(t,n,s){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==s?void 0:s.continuationToken;var a;for(r||(setContinuationToken(a=(e=yield tslib.__await(this._listByResourceGroup(t,n))).value||[],r=e.nextLink),yield yield tslib.__await(a));r;){e=yield tslib.__await(this._listByResourceGroupNext(t,r,n)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listByResourceGroupPagingAll(n,s){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listByResourceGroupPagingPage(n,s));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(t,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==n?void 0:n.continuationToken;var a;for(r||(setContinuationToken(a=(e=yield tslib.__await(this._list(t))).value||[],r=e.nextLink),yield yield tslib.__await(a));r;){e=yield tslib.__await(this._listNext(r,t)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(n){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listPagingPage(n));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}create(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,parameters:a,options:i},createOperationSpec$3)}update(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},updateOperationSpec$2)}delete(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},deleteOperationSpec$3)}get(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},getOperationSpec$6)}_listByResourceGroup(e,r){return this.client.sendOperationRequest({resourceGroupName:e,options:r},listByResourceGroupOperationSpec$1)}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$2)}getCheckNameAvailability(e,r){return this.client.sendOperationRequest({parameters:e,options:r},getCheckNameAvailabilityOperationSpec)}_listByResourceGroupNext(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,nextLink:r,options:a},listByResourceGroupNextOperationSpec$1)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec$1)}}const serializer$a=coreClient__namespace.createSerializer(Mappers,!1),createOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}",httpMethod:"PUT",responses:{200:{bodyMapper:Bot},201:{bodyMapper:Bot},default:{bodyMapper:ErrorModel}},requestBody:parameters,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$a},updateOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}",httpMethod:"PATCH",responses:{200:{bodyMapper:Bot},201:{bodyMapper:Bot},default:{bodyMapper:ErrorModel}},requestBody:{parameterPath:{location:["options","location"],tags:["options","tags"],sku:["options","sku"],kind:["options","kind"],etag:["options","etag"],properties:["options","properties"]},mapper:Object.assign(Object.assign({},Bot),{required:!0})},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$a},deleteOperationSpec$3={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$a},getOperationSpec$6={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}",httpMethod:"GET",responses:{200:{bodyMapper:Bot},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$a},listByResourceGroupOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,subscriptionId],headerParameters:[accept],serializer:serializer$a},listOperationSpec$2={path:"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$a},getCheckNameAvailabilityOperationSpec={path:"/providers/Microsoft.BotService/checkNameAvailability",httpMethod:"POST",responses:{200:{bodyMapper:CheckNameAvailabilityResponseBody},default:{bodyMapper:ErrorModel}},requestBody:parameters2,queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$a},listByResourceGroupNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},urlParameters:[$host,resourceGroupName,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$a},listNextOperationSpec$1={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:BotResponseList},default:{bodyMapper:ErrorModel}},urlParameters:[$host,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$a};class ChannelsImpl{constructor(e){this.client=e}listByResourceGroup(r,a,i){const e=this.listByResourceGroupPagingAll(r,a,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByResourceGroupPagingPage(r,a,i,e)}}}listByResourceGroupPagingPage(t,n,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var a;for(r||(setContinuationToken(a=(e=yield tslib.__await(this._listByResourceGroup(t,n,s))).value||[],r=e.nextLink),yield yield tslib.__await(a));r;){e=yield tslib.__await(this._listByResourceGroupNext(t,n,r,s)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listByResourceGroupPagingAll(n,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listByResourceGroupPagingPage(n,s,o));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}create(e,r,a,i,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,parameters:i,options:t},createOperationSpec$2)}update(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,options:i},updateOperationSpec$1)}delete(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,options:i},deleteOperationSpec$2)}get(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,options:i},getOperationSpec$5)}listWithKeys(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,options:i},listWithKeysOperationSpec)}_listByResourceGroup(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},listByResourceGroupOperationSpec)}_listByResourceGroupNext(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,nextLink:a,options:i},listByResourceGroupNextOperationSpec)}}const serializer$9=coreClient__namespace.createSerializer(Mappers,!1),createOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",httpMethod:"PUT",responses:{200:{bodyMapper:BotChannel},201:{bodyMapper:BotChannel},default:{bodyMapper:ErrorModel}},requestBody:parameters3,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$9},updateOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",httpMethod:"PATCH",responses:{200:{bodyMapper:BotChannel},201:{bodyMapper:BotChannel},default:{bodyMapper:ErrorModel}},requestBody:{parameterPath:{location:["options","location"],tags:["options","tags"],sku:["options","sku"],kind:["options","kind"],etag:["options","etag"],properties:["options","properties"]},mapper:Object.assign(Object.assign({},BotChannel),{required:!0})},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$9},deleteOperationSpec$2={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName1],headerParameters:[accept],serializer:serializer$9},getOperationSpec$5={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}",httpMethod:"GET",responses:{200:{bodyMapper:BotChannel},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName1],headerParameters:[accept],serializer:serializer$9},listWithKeysOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys",httpMethod:"POST",responses:{200:{bodyMapper:ListChannelWithKeysResponse},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName],headerParameters:[accept],serializer:serializer$9},listByResourceGroupOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels",httpMethod:"GET",responses:{200:{bodyMapper:ChannelResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$9},listByResourceGroupNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ChannelResponseList},default:{bodyMapper:ErrorModel}},urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$9};class DirectLineImpl{constructor(e){this.client=e}regenerateKeys(e,r,a,i,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,channelName:a,parameters:i,options:t},regenerateKeysOperationSpec)}}const serializer$8=coreClient__namespace.createSerializer(Mappers,!1),regenerateKeysOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/regeneratekeys",httpMethod:"POST",responses:{200:{bodyMapper:BotChannel},default:{bodyMapper:ErrorModel}},requestBody:parameters5,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,channelName2],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$8};class EmailImpl{constructor(e){this.client=e}createSignInUrl(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},createSignInUrlOperationSpec)}}const serializer$7=coreClient__namespace.createSerializer(Mappers,!1),createSignInUrlOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/createEmailSignInUrl",httpMethod:"POST",responses:{200:{bodyMapper:CreateEmailSignInUrlResponse},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$7};class OperationsImpl{constructor(e){this.client=e}list(r){const e=this.listPagingAll(r);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,e)}}}listPagingPage(t,n){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==n?void 0:n.continuationToken;var a;for(r||(setContinuationToken(a=(e=yield tslib.__await(this._list(t))).value||[],r=e.nextLink),yield yield tslib.__await(a));r;){e=yield tslib.__await(this._listNext(r,t)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listPagingAll(n){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listPagingPage(n));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}_list(e){return this.client.sendOperationRequest({options:e},listOperationSpec$1)}_listNext(e,r){return this.client.sendOperationRequest({nextLink:e,options:r},listNextOperationSpec)}}const serializer$6=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec$1={path:"/providers/Microsoft.BotService/operations",httpMethod:"GET",responses:{200:{bodyMapper:OperationEntityListResult},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host],headerParameters:[accept],serializer:serializer$6},listNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:OperationEntityListResult},default:{bodyMapper:ErrorModel}},urlParameters:[$host,nextLink],headerParameters:[accept],serializer:serializer$6};class BotConnectionImpl{constructor(e){this.client=e}listByBotService(r,a,i){const e=this.listByBotServicePagingAll(r,a,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listByBotServicePagingPage(r,a,i,e)}}}listByBotServicePagingPage(t,n,s,o){return tslib.__asyncGenerator(this,arguments,function*(){let e,r=null==o?void 0:o.continuationToken;var a;for(r||(setContinuationToken(a=(e=yield tslib.__await(this._listByBotService(t,n,s))).value||[],r=e.nextLink),yield yield tslib.__await(a));r;){e=yield tslib.__await(this._listByBotServiceNext(t,n,r,s)),r=e.nextLink;var i=e.value||[];setContinuationToken(i,r),yield yield tslib.__await(i)}})}listByBotServicePagingAll(n,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listByBotServicePagingPage(n,s,o));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}listServiceProviders(e){return this.client.sendOperationRequest({options:e},listServiceProvidersOperationSpec)}listWithSecrets(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,connectionName:a,options:i},listWithSecretsOperationSpec)}create(e,r,a,i,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,connectionName:a,parameters:i,options:t},createOperationSpec$1)}update(e,r,a,i,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,connectionName:a,parameters:i,options:t},updateOperationSpec)}get(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,connectionName:a,options:i},getOperationSpec$4)}delete(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,connectionName:a,options:i},deleteOperationSpec$1)}_listByBotService(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},listByBotServiceOperationSpec)}_listByBotServiceNext(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,nextLink:a,options:i},listByBotServiceNextOperationSpec)}}const serializer$5=coreClient__namespace.createSerializer(Mappers,!1),listServiceProvidersOperationSpec={path:"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders",httpMethod:"POST",responses:{200:{bodyMapper:ServiceProviderResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$5},listWithSecretsOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}/listWithSecrets",httpMethod:"POST",responses:{200:{bodyMapper:ConnectionSetting},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,connectionName],headerParameters:[accept],serializer:serializer$5},createOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}",httpMethod:"PUT",responses:{200:{bodyMapper:ConnectionSetting},201:{bodyMapper:ConnectionSetting},default:{bodyMapper:ErrorModel}},requestBody:parameters6,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,connectionName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$5},updateOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}",httpMethod:"PATCH",responses:{200:{bodyMapper:ConnectionSetting},201:{bodyMapper:ConnectionSetting},default:{bodyMapper:ErrorModel}},requestBody:parameters6,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,connectionName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$5},getOperationSpec$4={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionSetting},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,connectionName],headerParameters:[accept],serializer:serializer$5},deleteOperationSpec$1={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections/{connectionName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,connectionName],headerParameters:[accept],serializer:serializer$5},listByBotServiceOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionSettingResponseList},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$5},listByBotServiceNextOperationSpec={path:"{nextLink}",httpMethod:"GET",responses:{200:{bodyMapper:ConnectionSettingResponseList},default:{bodyMapper:ErrorModel}},urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,nextLink],headerParameters:[accept],serializer:serializer$5};class QnAMakerEndpointKeysImpl{constructor(e){this.client=e}get(e,r){return this.client.sendOperationRequest({parameters:e,options:r},getOperationSpec$3)}}const serializer$4=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$3={path:"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/listQnAMakerEndpointKeys",httpMethod:"POST",responses:{200:{bodyMapper:QnAMakerEndpointKeysResponse},default:{bodyMapper:ErrorModel}},requestBody:parameters7,queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$4};class HostSettingsImpl{constructor(e){this.client=e}get(e){return this.client.sendOperationRequest({options:e},getOperationSpec$2)}}const serializer$3=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$2={path:"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/hostSettings",httpMethod:"GET",responses:{200:{bodyMapper:HostSettingsResponse},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId],headerParameters:[accept],serializer:serializer$3};class LroImpl{constructor(e,r,a,i=a.path,t=a.httpMethod){this.sendOperationFn=e,this.args=r,this.spec=a,this.requestPath=i,this.requestMethod=t}sendInitialRequest(){return tslib.__awaiter(this,void 0,void 0,function*(){return this.sendOperationFn(this.args,this.spec)})}sendPollRequest(r){return tslib.__awaiter(this,void 0,void 0,function*(){var e=this.spec,e=tslib.__rest(e,["requestBody"]);return this.sendOperationFn(this.args,Object.assign(Object.assign({},e),{path:r,httpMethod:"GET"}))})}}class OperationResultsImpl{constructor(e){this.client=e}beginGet(r,a){return tslib.__awaiter(this,void 0,void 0,function*(){const n=(e,r)=>tslib.__awaiter(this,void 0,void 0,function*(){return this.client.sendOperationRequest(e,r)});var e=new LroImpl((r,t)=>tslib.__awaiter(this,void 0,void 0,function*(){let a=void 0;const i=null==(e=r.options)?void 0:e.onResponse;var e=Object.assign(Object.assign({},r),{options:Object.assign(Object.assign({},r.options),{onResponse:(e,r)=>{a=e,null!==i&&void 0!==i&&i(e,r)}})});return{flatResponse:yield n(e,t),rawResponse:{statusCode:a.status,body:a.parsedBody,headers:a.headers.toJSON()}}}),{operationResultId:r,options:a},getOperationSpec$1),e=new coreLro.LroEngine(e,{resumeFrom:null==a?void 0:a.resumeFrom,intervalInMs:null==a?void 0:a.updateIntervalInMs});return yield e.poll(),e})}beginGetAndWait(e,r){return tslib.__awaiter(this,void 0,void 0,function*(){return(yield this.beginGet(e,r)).pollUntilDone()})}}const serializer$2=coreClient__namespace.createSerializer(Mappers,!1),getOperationSpec$1={path:"/subscriptions/{subscriptionId}/providers/Microsoft.BotService/operationresults/{operationResultId}",httpMethod:"GET",responses:{200:{bodyMapper:OperationResultsDescription},201:{bodyMapper:OperationResultsDescription},202:{bodyMapper:OperationResultsDescription},204:{bodyMapper:OperationResultsDescription},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,subscriptionId,operationResultId],headerParameters:[accept],serializer:serializer$2};class PrivateEndpointConnectionsImpl{constructor(e){this.client=e}list(r,a,i){const e=this.listPagingAll(r,a,i);return{next(){return e.next()},[Symbol.asyncIterator](){return this},byPage:e=>{if(null!=e&&e.maxPageSize)throw new Error("maxPageSize is not supported by this operation.");return this.listPagingPage(r,a,i,e)}}}listPagingPage(r,a,i,e){return tslib.__asyncGenerator(this,arguments,function*(){var e=yield tslib.__await(this._list(r,a,i));yield yield tslib.__await(e.value||[])})}listPagingAll(n,s,o){return tslib.__asyncGenerator(this,arguments,function*(){var r,e;try{for(var a,i=tslib.__asyncValues(this.listPagingPage(n,s,o));!(a=yield tslib.__await(i.next())).done;){var t=a.value;yield tslib.__await(yield*tslib.__asyncDelegator(tslib.__asyncValues(t)))}}catch(e){r={error:e}}finally{try{a&&!a.done&&(e=i.return)&&(yield tslib.__await(e.call(i)))}finally{if(r)throw r.error}}})}_list(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},listOperationSpec)}get(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,privateEndpointConnectionName:a,options:i},getOperationSpec)}create(e,r,a,i,t){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,privateEndpointConnectionName:a,properties:i,options:t},createOperationSpec)}delete(e,r,a,i){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,privateEndpointConnectionName:a,options:i},deleteOperationSpec)}}const serializer$1=coreClient__namespace.createSerializer(Mappers,!1),listOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections",httpMethod:"GET",responses:{200:{bodyMapper:PrivateEndpointConnectionListResult},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer$1},getOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"GET",responses:{200:{bodyMapper:PrivateEndpointConnection},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,privateEndpointConnectionName],headerParameters:[accept],serializer:serializer$1},createOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"PUT",responses:{200:{bodyMapper:PrivateEndpointConnection},default:{bodyMapper:ErrorModel}},requestBody:properties2,queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,privateEndpointConnectionName],headerParameters:[contentType,accept],mediaType:"json",serializer:serializer$1},deleteOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}",httpMethod:"DELETE",responses:{200:{},204:{},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId,privateEndpointConnectionName],headerParameters:[accept],serializer:serializer$1};class PrivateLinkResourcesImpl{constructor(e){this.client=e}listByBotResource(e,r,a){return this.client.sendOperationRequest({resourceGroupName:e,resourceName:r,options:a},listByBotResourceOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),listByBotResourceOperationSpec={path:"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/privateLinkResources",httpMethod:"GET",responses:{200:{bodyMapper:PrivateLinkResourceListResult},default:{bodyMapper:ErrorModel}},queryParameters:[apiVersion],urlParameters:[$host,resourceGroupName,resourceName,subscriptionId],headerParameters:[accept],serializer:serializer};class AzureBotService extends coreClient__namespace.ServiceClient{constructor(e,r,a){if(void 0===e)throw new Error("'credentials' cannot be null");if(void 0===r)throw new Error("'subscriptionId' cannot be null");var i,t="azsdk-js-arm-botservice/4.0.0",t=(a=a||{}).userAgentOptions&&a.userAgentOptions.userAgentPrefix?a.userAgentOptions.userAgentPrefix+" "+t:t,t=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),a),{userAgentOptions:{userAgentPrefix:t},endpoint:null!=(t=null!=(t=a.endpoint)?t:a.baseUri)?t:"https://management.azure.com"});super(t);let n=!1;null!=a&&a.pipeline&&0<a.pipeline.getOrderedPolicies().length&&(i=a.pipeline.getOrderedPolicies(),n=i.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),a&&a.pipeline&&0!=a.pipeline.getOrderedPolicies().length&&n||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:null!=(i=t.credentialScopes)?i:t.endpoint+"/.default",challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.subscriptionId=r,this.$host=a.$host||"https://management.azure.com",this.apiVersion=a.apiVersion||"2022-09-15",this.bots=new BotsImpl(this),this.channels=new ChannelsImpl(this),this.directLine=new DirectLineImpl(this),this.email=new EmailImpl(this),this.operations=new OperationsImpl(this),this.botConnection=new BotConnectionImpl(this),this.qnAMakerEndpointKeys=new QnAMakerEndpointKeysImpl(this),this.hostSettings=new HostSettingsImpl(this),this.operationResults=new OperationResultsImpl(this),this.privateEndpointConnections=new PrivateEndpointConnectionsImpl(this),this.privateLinkResources=new PrivateLinkResourcesImpl(this),this.addCustomApiVersionPolicy(a.apiVersion)}addCustomApiVersionPolicy(t){t&&this.pipeline.addPolicy({name:"CustomApiVersionPolicy",sendRequest(a,i){return tslib.__awaiter(this,void 0,void 0,function*(){var e,r=a.url.split("?");return 1<r.length&&(e=r[1].split("&").map(e=>-1<e.indexOf("api-version")?"api-version="+t:e),a.url=r[0]+"?"+e.join("&")),i(a)})}})}}exports.AzureBotService=AzureBotService,exports.getContinuationToken=getContinuationToken;